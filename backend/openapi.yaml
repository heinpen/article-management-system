openapi: 3.0.3
info:
  title: API
  version: 1.0.0
servers:
  - url: http://localhost:3001/api/v1
    description: Dev server
paths:
  /register:
    post:
      tags:
        - Users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: john_doe
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  example: p@ssw0rd
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  done:
                    type: boolean
                    example: true
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Account with the same email already exists
  /login:
    post:
      tags:
        - Users
      summary: Validate user credentials and generate token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailOrUsername:
                  type: string
                  example: john_doe
                password:
                  type: string
                  example: p@ssw0rd
                isChecked:
                  type: boolean
                  example: true
      responses:
        '200':
          description: Token successfully set
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Token successfully set
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Wrong password
  /user/profile:
    get:
      tags:
        - Users
      summary: Get user profile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    example: john_doe
                  firstName:
                    type: string
                    example: John
                  lastName:
                    type: string
                    example: Doe
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: No user found. Please verify your credentials or consider registering
security:
  - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
